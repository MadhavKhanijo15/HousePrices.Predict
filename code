# Importing Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load Dataset
df = pd.read_csv("/kaggle/input/california-housing-prices/housing.csv")

# Initial Exploration
print("Basic Info:")
df.info()
print("\nSummary Stats:")
print(df.describe())
print("\nMissing Values:")
print(df.isnull().sum())

# Handle Missing Values
df['total_bedrooms'].fillna(df['total_bedrooms'].median(), inplace=True)

# Correlation Heatmap (Ignore categorical column)
numeric_df = df.select_dtypes(include=['float64', 'int64'])
plt.figure(figsize=(10,8))
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Optional Visualization (EDA)
sns.histplot(df['median_house_value'], bins=30, kde=True)
plt.title("Distribution of House Prices")
plt.show()

sns.boxplot(x=df['median_income'])
plt.title("Boxplot of Median Income")
plt.show()

# Select Features and Target
features = ['median_income', 'housing_median_age', 'total_rooms', 'population']
X = df[features]
y = df['median_house_value']

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and Train Model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict and Evaluate
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nðŸ“Š Model Evaluation:")
print(f"Mean Squared Error (MSE): {mse}")
print(f"RÂ² Score: {r2}")

# Plot Actual vs Predicted
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, alpha=0.5, color='blue')
plt.xlabel("Actual House Prices")
plt.ylabel("Predicted House Prices")
plt.title("Actual vs Predicted House Prices")
plt.show()
